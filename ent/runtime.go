// Code generated by ent, DO NOT EDIT.

package ent

import (
	"project-manager/ent/packages"
	"project-manager/ent/projects"
	"project-manager/ent/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	packagesFields := schema.Packages{}.Fields()
	_ = packagesFields
	// packagesDescName is the schema descriptor for name field.
	packagesDescName := packagesFields[0].Descriptor()
	// packages.NameValidator is a validator for the "name" field. It is called by the builders before save.
	packages.NameValidator = func() func(string) error {
		validators := packagesDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// packagesDescDescription is the schema descriptor for description field.
	packagesDescDescription := packagesFields[2].Descriptor()
	// packages.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	packages.DescriptionValidator = packagesDescDescription.Validators[0].(func(string) error)
	// packagesDescStacks is the schema descriptor for stacks field.
	packagesDescStacks := packagesFields[3].Descriptor()
	// packages.DefaultStacks holds the default value on creation for the stacks field.
	packages.DefaultStacks = packagesDescStacks.Default.(string)
	// packagesDescCreatedAt is the schema descriptor for created_at field.
	packagesDescCreatedAt := packagesFields[4].Descriptor()
	// packages.DefaultCreatedAt holds the default value on creation for the created_at field.
	packages.DefaultCreatedAt = packagesDescCreatedAt.Default.(func() time.Time)
	// packagesDescUpdatedAt is the schema descriptor for updated_at field.
	packagesDescUpdatedAt := packagesFields[5].Descriptor()
	// packages.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	packages.DefaultUpdatedAt = packagesDescUpdatedAt.Default.(func() time.Time)
	// packages.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	packages.UpdateDefaultUpdatedAt = packagesDescUpdatedAt.UpdateDefault.(func() time.Time)
	projectsFields := schema.Projects{}.Fields()
	_ = projectsFields
	// projectsDescName is the schema descriptor for name field.
	projectsDescName := projectsFields[0].Descriptor()
	// projects.NameValidator is a validator for the "name" field. It is called by the builders before save.
	projects.NameValidator = projectsDescName.Validators[0].(func(string) error)
	// projectsDescStacks is the schema descriptor for stacks field.
	projectsDescStacks := projectsFields[4].Descriptor()
	// projects.DefaultStacks holds the default value on creation for the stacks field.
	projects.DefaultStacks = projectsDescStacks.Default.(string)
}
